#Sigmoid fuction
import math

def basic_sigmoid(x):
  s = 1/(1+math.exp(-x))
  return s

# numpy is more useful because usually use matrices and vectors for machine learning

import numpy as np

x = np.array([4,5,6])
print(np.exp(x))

print(x+3)

def sigmoid(x):
  s = 1/(1 + np.exp(-x))
  return s

y = np.array([7,8,9])
sigmoid(y)

#Sigmoid gradient
def sigmoid_derivative(x):
    #x-a scalar or numpy array
    s = 1/(1+np.exp(-x))
    ds = s*(1-s)
    return ds
