To make sure that code is computationally efficient, vectorization is needed

import time
import numpy as np

#np.dot() performs a matrix-matrix or matrix-vector multiplication

x1=[9,2,5,0,0,7,5,0,0,0,9,2,5,0,0]
x2=[9,2,2,9,0,9,2,5,0,0,9,2,5,0,0]

tic = time.process_time()
dot = 0
for i in range(len(x1)):
    dot += x1[i]*x2[i]
toc = time.process_time()
print('dot = '+str(dot)+'\n -----Computation time = '+str(1000*(toc-tic))+'ms')

tic = time.process_time()
outer = np.zeros((len(x1),len(x2))) 
#creat a len(x1)*len(x2) matrix with only zeros
for i in range(len(x1)):
    for j in range(len(x2)):
        outer[i,j]= x1[i]*x2[j]
toc = time.process_time()
print('outer = '+str(outer)+'\n -----Computation time = '+str(1000*(toc-tic))+'ms')

tic = time.process_time()
mul = np.zeros(len(x1))
for i in range(len(x1)):
    mul[i] = x1[i]*x2[i]
toc = time.process_time()
print('elementwise multiplication = '+str(mul)+'\n -----Computation time = '+str(1000*(toc-tic))+'ms')

#classic general dot product implementation
W = np.random.rand(3,len(x1)) #random 3*len(x1) numpy array
tic = time.process_time()
gdot = np.zeros(W.shape[0]) 
for i in range(W.shape[0]):
    for j in range(len(x1)):
        gdot[i] += W[i,j]*x1[j]
toc = time.process_time()
print('gdot = '+str(gdot)+'\n -----Computation time = '+str(1000*(toc-tic))+'ms')


#output
dot = 278
 -----Computation time = 0.0ms
outer = [[ 81.  18.  18.  81.   0.  81.  18.  45.   0.   0.  81.  18.  45.   0.
    0.]
 [ 18.   4.   4.  18.   0.  18.   4.  10.   0.   0.  18.   4.  10.   0.
    0.]
 [ 45.  10.  10.  45.   0.  45.  10.  25.   0.   0.  45.  10.  25.   0.
    0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
    0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
    0.]
 [ 63.  14.  14.  63.   0.  63.  14.  35.   0.   0.  63.  14.  35.   0.
    0.]
 [ 45.  10.  10.  45.   0.  45.  10.  25.   0.   0.  45.  10.  25.   0.
    0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
    0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
    0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
    0.]
 [ 81.  18.  18.  81.   0.  81.  18.  45.   0.   0.  81.  18.  45.   0.
    0.]
 [ 18.   4.   4.  18.   0.  18.   4.  10.   0.   0.  18.   4.  10.   0.
    0.]
 [ 45.  10.  10.  45.   0.  45.  10.  25.   0.   0.  45.  10.  25.   0.
    0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
    0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
    0.]]
 -----Computation time = 0.0ms
elementwise multiplication = [ 81.   4.  10.   0.   0.  63.  10.   0.   0.   0.  81.   4.  25.   0.   0.]
 -----Computation time = 0.0ms
gdot = [ 25.68477247  21.31396004  32.41836998]
 -----Computation time = 0.0ms
