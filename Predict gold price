from sklearn.linear_model import LinearRegression
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn

import fix_yahoo_finance as yf
df = yf.download('GLD','2008-01-01','2018-02-25')
df = df[['Close']]
df = df.dropna()
df.Close.plot(figsize = (10,5))
plt.ylabel('Gold ETF Prices')
plt.show()

df['S_3'] = df['Close'].shift(1).rolling(window=3).mean()
df['S_9'] = df['Close'].shift(1).rolling(window=9).mean()

df = dr.dropna()
X = DF[['S_3','S_9']]
X.head()

y = df['Close']
y.head()

t = int(t*len(df))
X_train = X[:t]
y_train = y[:t]

X_test = X[:t]
y_test = y[:t]

linear = LinearRegression().fit(X_train,y_train)
print('Gold ETF Price= ',round(linear.coef_[0],2),\
     '*3 Day Moving Average', round(linear.coef_[1],2),\
     '*9 Day Moving Average', round(linear.intercept,2))
     
predicted_price = linear.predict(X_test)
predicted_price = pd.DataFrame(predicted_price,index=y_test.index,columns = ['price'])
predicted_price.plot(figsize=(10,5))
y_test.plot()
plt.legend(['predicted_price','actual_price'])
plt.ylabel('Gold ETF Price')
plt.show()

r2_score = linear.score(X[:t],y[:t])*100
