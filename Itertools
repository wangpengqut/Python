# For map and filter will return, and it is powerfull data structure
# results

import itertools
x = itertools.accumulate(range(10))
print(list(x))

#[0, 1, 3, 6, 10, 15, 21, 28, 36, 45]


x = itertools.chain(range(3), range(4), [3,2,1])
print(list(x))

#[0, 1, 2, 0, 1, 2, 3, 3, 2, 1]


x = itertools.combinations(range(4), 3)
print(list(x))

#[(0, 1, 2), (0, 1, 3), (0, 2, 3), (1, 2, 3)]


x = itertools.combinations_with_replacement('ABC', 2)
print(list(x))

[('A', 'A'), ('A', 'B'), ('A', 'C'), ('B', 'B'), ('B', 'C'), ('C', 'C')]


x = itertools.compress(range(5), (True, False, True, True, False))
print(list(x))

#[0, 2, 3]


x = itertools.count(start=20, step=-1)
print(list(itertools.islice(x, 0, 10, 1)))

#[20, 19, 18, 17, 16, 15, 14, 13, 12, 11]


x = itertools.cycle('ABC')
print(list(itertools.islice(x, 0, 10, 1)))

#['A', 'B', 'C', 'A', 'B', 'C', 'A', 'B', 'C', 'A']


x = itertools.dropwhile(lambda e: e < 5, range(10))
print(list(x))

#[5, 6, 7, 8, 9]


x = itertools.filterfalse(lambda e: e < 5, (1, 5, 3, 6, 9, 4))
print(list(x))

#[5, 6, 9]


x = itertools.groupby(range(10), lambda x: x < 5 or x > 8)                                                                                                 
for condition, numbers in x:
    print(condition, list(numbers))                                                                                                        

#True [0, 1, 2, 3, 4]                                                              
#False [5, 6, 7, 8]                                                                
#True [9]


x = itertools.islice(range(10), 0, 9, 2)
print(list(x))

#[0, 2, 4, 6, 8] 


x = itertools.permutations(range(4), 3)
print(list(x))

#[(0, 1, 2), (0, 1, 3), (0, 2, 1), (0, 2, 3), (0, 3, 1), (0, 3, 2), (1, 0, 2), (1, 0, 3), (1, 2, 0), 
#(1, 2, 3), (1, 3, 0), (1, 3, 2), (2, 0, 1), (2, 0, 3), (2, 1, 0), (2, 1, 3), (2, 3, 0), (2, 3, 1), 
#(3, 0, 1), (3, 0, 2), (3, 1, 0), (3, 1, 2), (3, 2, 0), (3, 2, 1)] 


x = itertools.product('ABC', range(3))
print(list(x))

#[('A', 0), ('A', 1), ('A', 2), ('B', 0), ('B', 1), ('B', 2), ('C', 0), ('C', 1), ('C', 2)]


x = itertools.repeat(0, 5)
print(list(x))

#[0, 0, 0, 0, 0] 


x = itertools.starmap(str.islower, 'aBCDefGhI')
print(list(x))

#[True, False, False, False, True, True, False, True, False]


x = itertools.takewhile(lambda e: e < 5, range(10))
print(list(x))

#[0, 1, 2, 3, 4]


x = itertools.tee(range(10), 2)
for letters in x:
    print(list(letters))


#[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
#[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]


x = itertools.zip_longest(range(3), range(5))
y = zip(range(3), range(5))
print(list(x))

#[(0, 0), (1, 1), (2, 2), (None, 3), (None, 4)]

print(list(y))

#[(0, 0), (1, 1), (2, 2)] 
